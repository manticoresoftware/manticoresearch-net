/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 3.3.1
 * Contact: info@manticoresearch.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ManticoreSearch.Api;
using ManticoreSearch.Model;
using ManticoreSearch.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ManticoreSearch.Test.Model
{
    /// <summary>
    ///  Class for testing Highlight
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class HighlightTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for Highlight
        //private Highlight instance;

        public HighlightTests()
        {
            // TODO uncomment below to create an instance of Highlight
            //instance = new Highlight();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of Highlight
        /// </summary>
        [Fact]
        public void HighlightInstanceTest()
        {
            // TODO uncomment below to test "IsType" Highlight
            //Assert.IsType<Highlight>(instance);
        }


        /// <summary>
        /// Test the property 'Fieldnames'
        /// </summary>
        [Fact]
        public void FieldnamesTest()
        {
            // TODO unit test for the property 'Fieldnames'
        }
        /// <summary>
        /// Test the property 'Fields'
        /// </summary>
        [Fact]
        public void FieldsTest()
        {
            // TODO unit test for the property 'Fields'
        }
        /// <summary>
        /// Test the property 'Encoder'
        /// </summary>
        [Fact]
        public void EncoderTest()
        {
            // TODO unit test for the property 'Encoder'
        }
        /// <summary>
        /// Test the property 'HighlightQuery'
        /// </summary>
        [Fact]
        public void HighlightQueryTest()
        {
            // TODO unit test for the property 'HighlightQuery'
        }
        /// <summary>
        /// Test the property 'PreTags'
        /// </summary>
        [Fact]
        public void PreTagsTest()
        {
            // TODO unit test for the property 'PreTags'
        }
        /// <summary>
        /// Test the property 'PostTags'
        /// </summary>
        [Fact]
        public void PostTagsTest()
        {
            // TODO unit test for the property 'PostTags'
        }
        /// <summary>
        /// Test the property 'NoMatchSize'
        /// </summary>
        [Fact]
        public void NoMatchSizeTest()
        {
            // TODO unit test for the property 'NoMatchSize'
        }
        /// <summary>
        /// Test the property 'FragmentSize'
        /// </summary>
        [Fact]
        public void FragmentSizeTest()
        {
            // TODO unit test for the property 'FragmentSize'
        }
        /// <summary>
        /// Test the property 'NumberOfFragments'
        /// </summary>
        [Fact]
        public void NumberOfFragmentsTest()
        {
            // TODO unit test for the property 'NumberOfFragments'
        }
        /// <summary>
        /// Test the property 'Limit'
        /// </summary>
        [Fact]
        public void LimitTest()
        {
            // TODO unit test for the property 'Limit'
        }
        /// <summary>
        /// Test the property 'LimitWords'
        /// </summary>
        [Fact]
        public void LimitWordsTest()
        {
            // TODO unit test for the property 'LimitWords'
        }
        /// <summary>
        /// Test the property 'LimitSnippets'
        /// </summary>
        [Fact]
        public void LimitSnippetsTest()
        {
            // TODO unit test for the property 'LimitSnippets'
        }
        /// <summary>
        /// Test the property 'LimitsPerField'
        /// </summary>
        [Fact]
        public void LimitsPerFieldTest()
        {
            // TODO unit test for the property 'LimitsPerField'
        }
        /// <summary>
        /// Test the property 'UseBoundaries'
        /// </summary>
        [Fact]
        public void UseBoundariesTest()
        {
            // TODO unit test for the property 'UseBoundaries'
        }
        /// <summary>
        /// Test the property 'ForceAllWords'
        /// </summary>
        [Fact]
        public void ForceAllWordsTest()
        {
            // TODO unit test for the property 'ForceAllWords'
        }
        /// <summary>
        /// Test the property 'AllowEmpty'
        /// </summary>
        [Fact]
        public void AllowEmptyTest()
        {
            // TODO unit test for the property 'AllowEmpty'
        }
        /// <summary>
        /// Test the property 'EmitZones'
        /// </summary>
        [Fact]
        public void EmitZonesTest()
        {
            // TODO unit test for the property 'EmitZones'
        }
        /// <summary>
        /// Test the property 'ForceSnippets'
        /// </summary>
        [Fact]
        public void ForceSnippetsTest()
        {
            // TODO unit test for the property 'ForceSnippets'
        }
        /// <summary>
        /// Test the property 'Around'
        /// </summary>
        [Fact]
        public void AroundTest()
        {
            // TODO unit test for the property 'Around'
        }
        /// <summary>
        /// Test the property 'StartSnippetId'
        /// </summary>
        [Fact]
        public void StartSnippetIdTest()
        {
            // TODO unit test for the property 'StartSnippetId'
        }
        /// <summary>
        /// Test the property 'HtmlStripMode'
        /// </summary>
        [Fact]
        public void HtmlStripModeTest()
        {
            // TODO unit test for the property 'HtmlStripMode'
        }
        /// <summary>
        /// Test the property 'SnippetBoundary'
        /// </summary>
        [Fact]
        public void SnippetBoundaryTest()
        {
            // TODO unit test for the property 'SnippetBoundary'
        }

    }

}
