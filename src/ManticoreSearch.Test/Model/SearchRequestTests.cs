/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 3.3.1
 * Contact: info@manticoresearch.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ManticoreSearch.Api;
using ManticoreSearch.Model;
using ManticoreSearch.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ManticoreSearch.Test.Model
{
    /// <summary>
    ///  Class for testing SearchRequest
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class SearchRequestTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for SearchRequest
        //private SearchRequest instance;

        public SearchRequestTests()
        {
            // TODO uncomment below to create an instance of SearchRequest
            //instance = new SearchRequest();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SearchRequest
        /// </summary>
        [Fact]
        public void SearchRequestInstanceTest()
        {
            // TODO uncomment below to test "IsType" SearchRequest
            //Assert.IsType<SearchRequest>(instance);
        }


        /// <summary>
        /// Test the property 'Index'
        /// </summary>
        [Fact]
        public void IndexTest()
        {
            // TODO unit test for the property 'Index'
        }
        /// <summary>
        /// Test the property 'Query'
        /// </summary>
        [Fact]
        public void QueryTest()
        {
            // TODO unit test for the property 'Query'
        }
        /// <summary>
        /// Test the property 'FulltextFilter'
        /// </summary>
        [Fact]
        public void FulltextFilterTest()
        {
            // TODO unit test for the property 'FulltextFilter'
        }
        /// <summary>
        /// Test the property 'AttrFilter'
        /// </summary>
        [Fact]
        public void AttrFilterTest()
        {
            // TODO unit test for the property 'AttrFilter'
        }
        /// <summary>
        /// Test the property 'Limit'
        /// </summary>
        [Fact]
        public void LimitTest()
        {
            // TODO unit test for the property 'Limit'
        }
        /// <summary>
        /// Test the property 'Offset'
        /// </summary>
        [Fact]
        public void OffsetTest()
        {
            // TODO unit test for the property 'Offset'
        }
        /// <summary>
        /// Test the property 'MaxMatches'
        /// </summary>
        [Fact]
        public void MaxMatchesTest()
        {
            // TODO unit test for the property 'MaxMatches'
        }
        /// <summary>
        /// Test the property 'Sort'
        /// </summary>
        [Fact]
        public void SortTest()
        {
            // TODO unit test for the property 'Sort'
        }
        /// <summary>
        /// Test the property 'Aggs'
        /// </summary>
        [Fact]
        public void AggsTest()
        {
            // TODO unit test for the property 'Aggs'
        }
        /// <summary>
        /// Test the property 'Expressions'
        /// </summary>
        [Fact]
        public void ExpressionsTest()
        {
            // TODO unit test for the property 'Expressions'
        }
        /// <summary>
        /// Test the property 'Highlight'
        /// </summary>
        [Fact]
        public void HighlightTest()
        {
            // TODO unit test for the property 'Highlight'
        }
        /// <summary>
        /// Test the property 'Source'
        /// </summary>
        [Fact]
        public void SourceTest()
        {
            // TODO unit test for the property 'Source'
        }
        /// <summary>
        /// Test the property 'Options'
        /// </summary>
        [Fact]
        public void OptionsTest()
        {
            // TODO unit test for the property 'Options'
        }
        /// <summary>
        /// Test the property 'Profile'
        /// </summary>
        [Fact]
        public void ProfileTest()
        {
            // TODO unit test for the property 'Profile'
        }
        /// <summary>
        /// Test the property 'TrackScores'
        /// </summary>
        [Fact]
        public void TrackScoresTest()
        {
            // TODO unit test for the property 'TrackScores'
        }

    }

}
