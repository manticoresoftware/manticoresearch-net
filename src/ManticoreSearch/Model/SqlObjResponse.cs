/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = ManticoreSearch.Client.FileParameter;
using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;

namespace ManticoreSearch.Model
{
    /// <summary>
    /// SqlObjResponse
    /// </summary>
    [DataContract(Name = "sqlObjResponse")]
    public partial class SqlObjResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="SqlObjResponse" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected SqlObjResponse() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="SqlObjResponse" /> class.
        /// </summary>
        /// <param name="hits">hits (required).</param>
        /// <param name="took">took.</param>
        /// <param name="timedOut">timedOut.</param>
        public SqlObjResponse(Object hits = default, decimal took = default, bool timedOut = default)
        {
            // to ensure "hits" is required (not null)
            if (hits == null)
            {
                throw new ArgumentNullException("hits is a required property for SqlObjResponse and cannot be null");
            }
            this.Hits = hits;
            this.Took = took;
            this.TimedOut = timedOut;
        }

        /// <summary>
        /// Gets or Sets Hits
        /// </summary>
        [DataMember(Name = "hits", IsRequired = true, EmitDefaultValue = true)]
        public Object Hits { get; set; }

        /// <summary>
        /// Gets or Sets Took
        /// </summary>
        [DataMember(Name = "took", EmitDefaultValue = false)]
        public decimal Took { get; set; }

        /// <summary>
        /// Gets or Sets TimedOut
        /// </summary>
        [DataMember(Name = "timed_out", EmitDefaultValue = true)]
        public bool TimedOut { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class SqlObjResponse {\n");
            sb.Append("  Hits: ").Append(Hits).Append("\n");
            sb.Append("  Took: ").Append(Took).Append("\n");
            sb.Append("  TimedOut: ").Append(TimedOut).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
