/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = ManticoreSearch.Client.FileParameter;
using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;

namespace ManticoreSearch.Model
{
    /// <summary>
    /// Success response for bulk search requests
    /// </summary>
    [DataContract(Name = "bulkResponse")]
    public partial class BulkResponse : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="BulkResponse" /> class.
        /// </summary>
        /// <param name="items">List of results.</param>
        /// <param name="errors">Errors occurred during the bulk operation.</param>
        /// <param name="error">Error message describing an error if such occurred.</param>
        /// <param name="currentLine">Number of the row returned in the response.</param>
        /// <param name="skippedLines">Number of rows skipped in the response.</param>
        public BulkResponse(List<Object> items = default, bool errors = default, string error = default, int currentLine = default, int skippedLines = default)
        {
            this.Items = items;
            this.Errors = errors;
            this.Error = error;
            this.CurrentLine = currentLine;
            this.SkippedLines = skippedLines;
        }

        /// <summary>
        /// List of results
        /// </summary>
        /// <value>List of results</value>
        [DataMember(Name = "items", EmitDefaultValue = false)]
        public List<Object> Items { get; set; }

        /// <summary>
        /// Errors occurred during the bulk operation
        /// </summary>
        /// <value>Errors occurred during the bulk operation</value>
        [DataMember(Name = "errors", EmitDefaultValue = true)]
        public bool Errors { get; set; }

        /// <summary>
        /// Error message describing an error if such occurred
        /// </summary>
        /// <value>Error message describing an error if such occurred</value>
        [DataMember(Name = "error", EmitDefaultValue = false)]
        public string Error { get; set; }

        /// <summary>
        /// Number of the row returned in the response
        /// </summary>
        /// <value>Number of the row returned in the response</value>
        [DataMember(Name = "current_line", EmitDefaultValue = false)]
        public int CurrentLine { get; set; }

        /// <summary>
        /// Number of rows skipped in the response
        /// </summary>
        /// <value>Number of rows skipped in the response</value>
        [DataMember(Name = "skipped_lines", EmitDefaultValue = false)]
        public int SkippedLines { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class BulkResponse {\n");
            sb.Append("  Items: ").Append(Items).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("  Error: ").Append(Error).Append("\n");
            sb.Append("  CurrentLine: ").Append(CurrentLine).Append("\n");
            sb.Append("  SkippedLines: ").Append(SkippedLines).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
