/*
 * Manticore Search Client
 *
 * Ð¡lient for Manticore Search. 
 *
 * The version of the OpenAPI document: 5.0.0
 * Contact: info@manticoresearch.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using FileParameter = ManticoreSearch.Client.FileParameter;
using OpenAPIDateConverter = ManticoreSearch.Client.OpenAPIDateConverter;

namespace ManticoreSearch.Model
{
    /// <summary>
    /// PercolateRequestQuery
    /// </summary>
    [DataContract(Name = "percolateRequest_query")]
    public partial class PercolateRequestQuery : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PercolateRequestQuery" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected PercolateRequestQuery() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="PercolateRequestQuery" /> class.
        /// </summary>
        /// <param name="percolate">Object representing the document to percolate (required).</param>
        public PercolateRequestQuery(Object percolate = default)
        {
            // to ensure "percolate" is required (not null)
            if (percolate == null)
            {
                throw new ArgumentNullException("percolate is a required property for PercolateRequestQuery and cannot be null");
            }
            this.Percolate = percolate;
        }

        /// <summary>
        /// Object representing the document to percolate
        /// </summary>
        /// <value>Object representing the document to percolate</value>
        [DataMember(Name = "percolate", IsRequired = true, EmitDefaultValue = true)]
        public Object Percolate { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class PercolateRequestQuery {\n");
            sb.Append("  Percolate: ").Append(Percolate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
